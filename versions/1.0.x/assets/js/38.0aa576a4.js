(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{484:function(e,t,a){"use strict";a.r(t);var r=a(26),s=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"flowcontrol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flowcontrol"}},[e._v("#")]),e._v(" FlowControl")]),e._v(" "),t("p",[e._v("This article describes how to use "),t("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/tree/develop/sermant-plugins/sermant-flowcontrol",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flow Control Plugin"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),t("p",[e._v("The flow control plugin is based on the "),t("a",{attrs:{href:"(https://github.com/resilience4j)"}},[e._v("resilience4j")]),e._v(' framework and implements non-intrusive flow control based on the "traffic" entry point. Currently, '),t("strong",[e._v("Traffic Limiting, Circuit Breaker, Bulkhead, Error Injection, Retry and Fusing index collection")]),e._v(" are supported. In addition, rules can be dynamically configured in the configuration center and take effect in real time.")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Traffic Limiting")]),e._v("：The number of QPS that pass through a specified interface within 1s is limited. When the traffic within 1s exceeds the specified threshold, flow control is triggered to limit the requested traffic.")]),e._v(" "),t("li",[t("strong",[e._v("Circuit Breaker")]),e._v("：Configure a circuit breaker policy for a specified interface to collect statistics on the error rate or slow request rate in a specified time window. When the error rate or slow request rate reaches a specified threshold, the circuit breaker is triggered. Before the time window is reset, all requests are isolated.")]),e._v(" "),t("li",[t("strong",[e._v("Bulkhead")]),e._v("：Controls concurrent traffic for a large number of concurrent traffic to prevent service breakdown caused by excessive instantaneous concurrent traffic.")]),e._v(" "),t("li",[t("strong",[e._v("Retry")]),e._v("：If a service encounters a non-fatal error, you can retry the service to prevent the service failure.")]),e._v(" "),t("li",[t("strong",[e._v("Error Injection")]),e._v("：An error injection policy is configured for a specified service when the service is running. Before the client accesses the target service, the error injection policy is used. This policy is mainly used to reduce the access load of the target service and can be used as a measure of downgrading the target service.")]),e._v(" "),t("li",[t("strong",[e._v("Fusing index collection")]),e._v("： During the service operation, collect the information related to the fuse, and report the indicators with the help of the "),t("RouterLink",{attrs:{to:"/en/document/plugin/monitor.html"}},[e._v("monitoring plugin")])],1),e._v(" "),t("li",[t("strong",[e._v("System Rule")]),e._v("：When the instance is running, if the system load, CPU, number of threads, average response time, and any index of qps exceed the preset value, flow control will be triggered to limit the request flow.")]),e._v(" "),t("li",[t("strong",[e._v("System Adaptive")]),e._v("：When the instance is running, the request is adaptively flow controlled according to the current load status of the system and the system data in the past period.")])]),e._v(" "),t("h2",{attrs:{id:"parameter-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameter-configuration"}},[e._v("#")]),e._v(" Parameter configuration")]),e._v(" "),t("h3",{attrs:{id:"configure-sermant-agent"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-sermant-agent"}},[e._v("#")]),e._v(" Configure Sermant-agent")]),e._v(" "),t("p",[e._v("To modify service information and dynamically configure the type and address of the center, refer to "),t("RouterLink",{attrs:{to:"/en/document/user-guide/sermant-agent.html"}},[e._v("Sermant-agent User Manual")]),e._v(".")],1),e._v(" "),t("h3",{attrs:{id:"configure-the-flow-control-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-the-flow-control-plugin"}},[e._v("#")]),e._v(" Configure the Flow Control Plugin")]),e._v(" "),t("p",[e._v("Modify the Configuration File"),t("code",[e._v("${javaagent path}/pluginPackage/flowcontrol/config/config.yaml")])]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("flow.control.plugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("useCseRule")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Whether to enable ServiceComb adaptation")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable-start-monitor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Whether to start indicator monitoring")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable-system-adaptive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Whether the system adaptive flow control is enabled. Enabling this switch requires that the enable-system-rule configuration item also be enabled")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enable-system-rule")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Whether to enable system rule flow control")]),e._v("\n")])])]),t("table",[t("thead",[t("tr",[t("th",[e._v("Key in Input Parameters")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("useCseRule")]),e._v(" "),t("td",[e._v("If adaptation is enabled, the plugin subscribes to the configuration center based on the application configuration, service configuration, and customized tag configuration.If useCseRule is set to false, the flow control plugin configures subscription based on the service name of the current instance. For example, if spring.application.name is set to flowControlDemo, the flow control plugin receives configuration based on the service=flowControlDemo tag during actual subscription.")]),e._v(" "),t("td",[e._v("true")]),e._v(" "),t("td",[e._v("true")])]),e._v(" "),t("tr",[t("td",[e._v("enable-start-monitor")]),e._v(" "),t("td",[e._v("Indicator monitoring switch")]),e._v(" "),t("td",[e._v("false")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("enable-system-adaptive")]),e._v(" "),t("td",[e._v("Whether to turn on the system adaptive flow control switch. To turn on this switch, the "),t("strong",[e._v("enable-system-rule")]),e._v(" configuration item should also be turned on, set to true, and after the corresponding flow control strategy is issued, adaptive flow control will be performed on the request flow according to the system load status")]),e._v(" "),t("td",[e._v("false")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("enable-system-rule")]),e._v(" "),t("td",[e._v("Whether to turn on the system rule flow control switch, set it to true and issue the corresponding flow control policy, then the request flow will be controlled according to the system parameter threshold set in the policy")]),e._v(" "),t("td",[e._v("false")]),e._v(" "),t("td",[e._v("false")])])])]),e._v(" "),t("h2",{attrs:{id:"detailed-governance-rules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#detailed-governance-rules"}},[e._v("#")]),e._v(" Detailed governance rules")]),e._v(" "),t("p",[e._v("Traffic governance uses traffic marking and flow control rules to control specified traffic. Traffic marking refers to request information, such as the interface path, interface method type, request header, and downstream service name.")]),e._v(" "),t("p",[e._v("Whether a flow control rule takes effect depends on the traffic flag. A flow control rule takes effect only when the traffic flag matches the request. The mapping between traffic marks and specific rules depends on the service scenario name. Generally, a specified prefix must be configured for traffic marks and traffic control rules.")]),e._v(" "),t("p",[e._v("Prefixes of flow marking and flow control rules are as follows:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("rule")]),e._v(" "),t("th",[e._v("prefix")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("traffic marks")]),e._v(" "),t("td",[e._v("servicecomb.MatchGroup")])]),e._v(" "),t("tr",[t("td",[e._v("traffic Limiting")]),e._v(" "),t("td",[e._v("servicecomb.rateLimiting")])]),e._v(" "),t("tr",[t("td",[e._v("Circuit Breaker")]),e._v(" "),t("td",[e._v("servicecomb.circuitBreaker")])]),e._v(" "),t("tr",[t("td",[e._v("Bulkhead")]),e._v(" "),t("td",[e._v("servicecomb.bulkhead")])]),e._v(" "),t("tr",[t("td",[e._v("Retry")]),e._v(" "),t("td",[e._v("servicecomb.retry")])]),e._v(" "),t("tr",[t("td",[e._v("Error Injection")]),e._v(" "),t("td",[e._v("servicecomb.faultInjection")])]),e._v(" "),t("tr",[t("td",[e._v("System Rule")]),e._v(" "),t("td",[e._v("servicecomb.system")])]),e._v(" "),t("tr",[t("td",[e._v("System Adaptive")]),e._v(" "),t("td",[e._v("servicecomb.system")])])])]),e._v(" "),t("p",[e._v("For example, the key of traffic marks must be prefixed with "),t("code",[e._v("servicecomb.MatchGroup")]),e._v(". The traffic limiting rule is prefixed with "),t("code",[e._v("servicecomb.rateLimiting")]),e._v(". The following is an example:")]),e._v(" "),t("blockquote",[t("p",[e._v("The traffic marking configuration key："),t("code",[e._v("servicecomb.MatchGroup.flow")])]),e._v(" "),t("p",[e._v("The key for configuring the traffic limiting rule："),t("code",[e._v("servicecomb.rateLimiting.flow")])]),e._v(" "),t("p",[e._v("In the preceding information, "),t("code",[e._v("flow")]),e._v("is the service scenario name. The traffic limiting rule takes effect only when the two service scenario names are the same and the request matches a traffic flag.")])]),e._v(" "),t("p",[e._v("The following describes the related configurations:")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("Traffic Marking")])]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("matches")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Matcher set. Multiple matchers can be configured.")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Matched API path. Various comparison modes are supported, such as exact and contain.")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exact")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /degrade "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Specific Matching Path")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("headers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Request header")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" \n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("exact")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" value  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Request header value. The value is key=value. The comparison method is the same as that of apiPath.")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Supported Method Types")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" GET\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" degrade     "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Configuration name, which is optional.")]),e._v("\n")])])]),t("p",[t("strong",[e._v("what traffic marking above can match  :")])]),e._v(" "),t("ul",[t("li",[e._v("If the request path is "),t("code",[e._v("/degrade")]),e._v(", the method type is "),t("code",[e._v("GET")]),e._v(", and the request header contains "),t("code",[e._v("key=value")]),e._v(", the matching is successful.")])]),e._v(" "),t("blockquote",[t("p",[e._v("For details about the configuration items, see the traffic marking section in the "),t("a",{attrs:{href:"http://servicecomb.gitee.io/servicecomb-java-chassis-doc/java-chassis/zh_CN/references-handlers/governance.html#_2",target:"_blank",rel:"noopener noreferrer"}},[e._v("ServiceComb development document"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("p",[t("strong",[e._v("Traffic marking request path (apiPath) configuration description")])]),e._v(" "),t("p",[e._v("The request path for traffic marking varies according to the request protocol configuration. Currently, HTTP (Spring) and RPC (Dubbo) protocols are used. The following describes how to configure the two request protocols:")]),e._v(" "),t("ul",[t("li",[t("p",[t("strong",[e._v("Http protocol")])]),e._v(" "),t("p",[e._v("This protocol performs matching based on the request path. For example, if the request path is "),t("code",[e._v("localhost:8080/test/flow")]),e._v(", the actual path is "),t("code",[e._v("/test/flow")]),e._v(". Therefore, if you need to set a matching rule, you need to configure the matching rule based on the path.")]),e._v(" "),t("p",[e._v("It should be noted that if the contextPath configured by the user is valid only after the contextPath prefix is added.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Rpc protocol(Dubbo)")])]),e._v(" "),t("p",[e._v("The protocol invoking needs to be based on an interface+method. For example, if the requested interface is "),t("code",[e._v("com.demo.test")]),e._v(", and the method is "),t("code",[e._v("flow")]),e._v(", a corresponding request path is "),t("code",[e._v("com.demo.test.flow")]),e._v(". Specially, if a user configures an interface version, for example, a specified version is "),t("code",[e._v("1.0.0")]),e._v(", The request path is "),t("code",[e._v("com.demo.test:1.0.0.flow")]),e._v(". In addition, set the request method to "),t("code",[e._v("POST")]),e._v(". The RPC protocol supports only POST.")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Traffic Limiting")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("limitRefreshPeriod")]),e._v(" "),t("td",[e._v("Unit of statistics time, in milliseconds. If you need to set this parameter, the unit can be set to "),t("code",[e._v("S")]),e._v(", for example, "),t("code",[e._v("10s")]),e._v(".")]),e._v(" "),t("td",[e._v("1000ms")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("rate")]),e._v(" "),t("td",[e._v("Number of requests that can be processed in the unit of statistical time.")]),e._v(" "),t("td",[e._v("1000")]),e._v(" "),t("td",[e._v("false")])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Circuit Breaker")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("failureRateThreshold")]),e._v(" "),t("td",[e._v("Error rate required for fuse")]),e._v(" "),t("td",[e._v("50")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("minimumNumberOfCalls")]),e._v(" "),t("td",[e._v("Minimum number of requests in the sliding window. The fuse condition is determined only when the minimum number of requests is exceeded.")]),e._v(" "),t("td",[e._v("100")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("name")]),e._v(" "),t("td",[e._v("Specifies the name of a configuration item. This parameter is optional.")]),e._v(" "),t("td",[e._v("null")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("slidingWindowSize")]),e._v(" "),t("td",[e._v("Size of the sliding statistics window. The value can be milliseconds or seconds. For example, 1000 indicates 1000 milliseconds, and 10s indicates 10 seconds.")]),e._v(" "),t("td",[e._v("100ms")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("slidingWindowType")]),e._v(" "),t("td",[e._v("Sliding window type. Currently, "),t("code",[e._v("time")]),e._v(" and "),t("code",[e._v("count")]),e._v(" are supported. The former is based on the time window and the latter is based on the number of requests.")]),e._v(" "),t("td",[e._v("time")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("slowCallDurationThreshold")]),e._v(" "),t("td",[e._v("Slow request threshold. The unit is the same as that of the sliding window.")]),e._v(" "),t("td",[e._v("60s")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("slowCallRateThreshold")]),e._v(" "),t("td",[e._v("Percentage of slow invoking requests. When the number of slow invoking requests reaches this percentage, connectivity is triggered.")]),e._v(" "),t("td",[e._v("100")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("waitDurationInOpenState")]),e._v(" "),t("td",[e._v("Recovery time after a circuit breaker. The default value is "),t("code",[e._v("60s")]),e._v(".")]),e._v(" "),t("td",[e._v("60s")]),e._v(" "),t("td",[e._v("false")])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Bulkhead")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("maxConcurrentCalls")]),e._v(" "),t("td",[e._v("Maximum number of concurrent calls")]),e._v(" "),t("td",[e._v("1000")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("maxWaitDuration")]),e._v(" "),t("td",[e._v("Maximum waiting time. If the thread exceeds maxConcurrentCalls, the thread attempts to wait. If the thread does not obtain resources after the waiting time expires, an isolation warehouse exception is thrown.")]),e._v(" "),t("td",[e._v("0")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("name")]),e._v(" "),t("td",[e._v("name of configuration, which is optional.")]),e._v(" "),t("td",[e._v("null")]),e._v(" "),t("td",[e._v("false")])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Retry")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("waitDuration")]),e._v(" "),t("td",[e._v("Retry wait time. The default value is milliseconds. The unit is second, for example, 2s.")]),e._v(" "),t("td",[e._v("10ms")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("retryStrategy")]),e._v(" "),t("td",[e._v("Retry policy. Currently, two retry policies are supported: fixed interval (FixedInterval) and exponential increase interval (RandomBackoff).")]),e._v(" "),t("td",[e._v("FixedInterval")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("maxAttempts")]),e._v(" "),t("td",[e._v("Maximum number of retries")]),e._v(" "),t("td",[e._v("3")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("retryOnResponseStatus")]),e._v(" "),t("td",[e._v("HTTP status code. Currently, only HTTP requests are supported. For dubbo requests, you can configure the exception type to determine whether to retry. The default value is RpcException.")]),e._v(" "),t("td",[e._v("null")]),e._v(" "),t("td",[e._v("false")])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Error Injection")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("type")]),e._v(" "),t("td",[e._v("Error injection type. Currently, "),t("code",[e._v("abort (request response)")]),e._v(" and "),t("code",[e._v("delay (request delay)")]),e._v(" are supported.")]),e._v(" "),t("td",[e._v("delay")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("percentage")]),e._v(" "),t("td",[e._v("Error Injection triggering probability")]),e._v(" "),t("td",[e._v("-1")]),e._v(" "),t("td",[e._v("true")])]),e._v(" "),t("tr",[t("td",[e._v("fallbackType")]),e._v(" "),t("td",[e._v("Return type of the request invoking. This parameter is valid only when "),t("code",[e._v("type is set to abort")]),e._v(". Currently, two types are supported, "),t("code",[e._v("ReturnNull")]),e._v(": empty content is directly returned and the status code is 200. "),t("code",[e._v("ThrowException")]),e._v(": The error code is returned based on the specified error code.`")]),e._v(" "),t("td",[e._v("ThrowException")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("errorCode")]),e._v(" "),t("td",[e._v("Specifies the returned error code. The default value is 500. This parameter is valid only "),t("code",[e._v("when type is abort and fallbackType is ThrowException")]),e._v(".")]),e._v(" "),t("td",[e._v("500")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("forceClosed")]),e._v(" "),t("td",[e._v("Indicates whether to forcibly disable the error injection capability. If this parameter is set to true, error injection does not take effect. The default value is false.")]),e._v(" "),t("td",[e._v("false")]),e._v(" "),t("td",[e._v("false")])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("System Rule")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("systemLoad")]),e._v(" "),t("td",[e._v("System load threshold, only supports linux")]),e._v(" "),t("td",[e._v("Double.MAX_VALUE")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("cpuUsage")]),e._v(" "),t("td",[e._v("System cpu usage threshold")]),e._v(" "),t("td",[e._v("1.0")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("qps")]),e._v(" "),t("td",[e._v("Qps threshold of inlet flow")]),e._v(" "),t("td",[e._v("Double.MAX_VALUE")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("aveRt")]),e._v(" "),t("td",[e._v("Average response time threshold of inlet flow, Unit: ms")]),e._v(" "),t("td",[e._v("Long.MAX_VALUE")]),e._v(" "),t("td",[e._v("false")])]),e._v(" "),t("tr",[t("td",[e._v("threadNum")]),e._v(" "),t("td",[e._v("Number of concurrent threads for the inlet traffic")]),e._v(" "),t("td",[e._v("Long.MAX_VALUE")]),e._v(" "),t("td",[e._v("false")])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("System Adaptive")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Configuration")]),e._v(" "),t("th",[e._v("Default Value")]),e._v(" "),t("th",[e._v("Required")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("systemLoad")]),e._v(" "),t("td",[e._v("System load threshold, only supports linux")]),e._v(" "),t("td",[e._v("Double.MAX_VALUE")]),e._v(" "),t("td",[e._v("false")])])])])])]),e._v(" "),t("h3",{attrs:{id:"configuring-flow-control-rules-based-on-the-configuration-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-flow-control-rules-based-on-the-configuration-file"}},[e._v("#")]),e._v(" Configuring Flow Control Rules Based On The Configuration File")]),e._v(" "),t("p",[e._v("When an application is started, the flow control plugin attempts to read the flow control rules and corresponding traffic flags from the configuration source loaded by SpringBoot. You need to configure the flow control rules before starting the application. The following is a configuration example. The example configuration is based on the "),t("code",[e._v("application.yml")]),e._v(" file.")]),e._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("servicecomb")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("matchGroup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-fault-null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v('\n      matches:\n        - apiPath:\n            exact: "/flow"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-retry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v('\n      matches:\n        - apiPath:\n            prefix: "/retry"\n          serviceName: rest-provider\n          method:\n          - GET')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-rateLimiting")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v('\n      matches:\n        - apiPath:\n            exact: "/flow"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-circuitBreaker-exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v('\n      matches:\n        - apiPath:\n            exact: "/exceptionBreaker"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-bulkhead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v('\n      matches:\n        - apiPath:\n            exact: "/flowcontrol/bulkhead"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      matched:\n        - apiPath:\n            prefix: /")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("rateLimiting")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-rateLimiting")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      rate: 1")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("retry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-retry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      maxAttempts: 3\n      retryOnResponseStatus:\n      - 500")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("circuitBreaker")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-circuitBreaker-exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      failureRateThreshold: 44\n      minimumNumberOfCalls: 2\n      name: circuit breaker\n      slidingWindowSize: 10000\n      slidingWindowType: time\n      waitDurationInOpenState: 5s")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("bulkhead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-bulkhead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      maxConcurrentCalls: 1\n      maxWaitDuration: 10")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("faultInjection")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-fault-null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      type: abort\n      percentage: 100\n      fallbackType: ReturnNull\n      forceClosed: false")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("demo-system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),t("span",{pre:!0,attrs:{class:"token scalar string"}},[e._v("\n      systemLoad: 0.6\n      cpuUsage: 0.6\n      qps: 100\n      aveRt: 20\n      threadNum: 100")]),e._v("\n")])])]),t("h3",{attrs:{id:"publishing-rules-of-dynamic-configuration-capability-based-on-sermant"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#publishing-rules-of-dynamic-configuration-capability-based-on-sermant"}},[e._v("#")]),e._v(" Publishing rules of dynamic configuration capability based on Sermant")]),e._v(" "),t("p",[e._v("For details, refer to "),t("RouterLink",{attrs:{to:"/en/document/user-guide/configuration-center.html"}},[e._v("Dynamic Configuration User Manual")])],1),e._v(" "),t("h2",{attrs:{id:"supported-versions-and-limitations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#supported-versions-and-limitations"}},[e._v("#")]),e._v(" Supported Versions and Limitations")]),e._v(" "),t("h3",{attrs:{id:"version-required"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#version-required"}},[e._v("#")]),e._v(" Version Required")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Framework")]),e._v(" "),t("th",[e._v("Version")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("SpringBoot")]),e._v(" "),t("td",[e._v("1.2.x - 2.6.x")])]),e._v(" "),t("tr",[t("td",[e._v("SpringWebMvc")]),e._v(" "),t("td",[e._v("4.1.3.RELEASE - 5.3.x")])]),e._v(" "),t("tr",[t("td",[e._v("Dubbo")]),e._v(" "),t("td",[e._v("2.6.x-2.7.x")])])])]),e._v(" "),t("h3",{attrs:{id:"limitations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limitations"}},[e._v("#")]),e._v(" Limitations")]),e._v(" "),t("ul",[t("li",[e._v("The "),t("code",[e._v("systemLoad")]),e._v(" configuration in system rules and system adaptive rules is only limited to "),t("strong",[e._v("linux")])]),e._v(" "),t("li",[e._v("The above [Configuring Flow Control Rules Based On The Configuration File](#Configuring Flow Control Rules Based On The Configuration File) is only applicable to "),t("strong",[e._v("Springboot")]),e._v(" applications")])]),e._v(" "),t("h2",{attrs:{id:"operation-and-result-validation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#operation-and-result-validation"}},[e._v("#")]),e._v(" Operation and result validation")]),e._v(" "),t("p",[e._v("The following will demonstrate how to use the flow control plugin.")]),e._v(" "),t("h3",{attrs:{id:"preparation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#preparation"}},[e._v("#")]),e._v(" Preparation")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/huaweicloud/Sermant-examples/tree/main/flowcontrol-demo/spring-cloud-demo/spring-provider",target:"_blank",rel:"noopener noreferrer"}},[e._v("Download"),t("OutboundLink")],1),e._v(" Demo source code")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("Download"),t("OutboundLink")],1),e._v(" or build Sermant package")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://zookeeper.apache.org/releases#download",target:"_blank",rel:"noopener noreferrer"}},[e._v("Download"),t("OutboundLink")],1),e._v(" and start zookeeper")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/vran-dev/PrettyZoo/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("Download"),t("OutboundLink")],1),e._v(" PrettyZoo  and connect zookeeper")])]),e._v(" "),t("h3",{attrs:{id:"step-1-compile-and-package-the-demo-application"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-1-compile-and-package-the-demo-application"}},[e._v("#")]),e._v(" Step 1: Compile and package the demo application")]),e._v(" "),t("p",[e._v("In the "),t("code",[e._v("${path}/Sermant-examples/flowcontrol-demo/spring-cloud-demo/spring-provider")]),e._v(" directory execute the following command：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# windows,Linux,mac")]),e._v("\nmvn clean package\n")])])]),t("p",[e._v("After successful packaging， generate "),t("code",[e._v("spring-provider.jar")]),e._v(" int the "),t("code",[e._v("${path}/Sermant-examples/flowcontrol-demo/spring-cloud-demo/spring-provider/target")]),e._v(" directory")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("Explain")]),e._v("： Path is the path where the demo application is downloaded")])]),e._v(" "),t("h3",{attrs:{id:"step-2-modify-plug-in-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-2-modify-plug-in-configuration"}},[e._v("#")]),e._v(" Step 2: Modify plug-in configuration")]),e._v(" "),t("p",[e._v("Refer to [Plug-in Configuration](#Plugin Configurations) for modification"),t("code",[e._v("${path}/sermant-agent-x.x.x/agent/pluginPackage/dynamic-config/config/config.yaml")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("flow.control.plugin:\n  useCseRule: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" \n  enable-start-monitor: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" \n  enable-system-adaptive: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" \n  enable-system-rule: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" \n")])])]),t("h3",{attrs:{id:"step-3-start-the-demo-application"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-3-start-the-demo-application"}},[e._v("#")]),e._v(" Step 3: Start the demo application")]),e._v(" "),t("p",[e._v("Start the demo application with the following command")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# windwos")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("java")]),e._v(" -javaagent:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${path}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("sermant-agent-x.x.x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("agent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("sermant-agent.jar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-Dspring.application.name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("spring-flow-provider "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-Dspring.cloud.zookeeper.connectString")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1:2181 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-jar")]),e._v(" spring-provider.jar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#linux mac")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("java")]),e._v(" -javaagent:"),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${path}")]),e._v("/sermant-agent-x.x.x/agent/sermant-agent.jar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-Dspring.application.name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("spring-flow-provider "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-Dspring.cloud.zookeeper.connectString")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1:2181 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-jar")]),e._v(" spring-provider.jar\n")])])]),t("blockquote",[t("p",[t("strong",[e._v("Explain")]),e._v("：\nThe ${path} in the above command needs to be replaced with the actual installation path of Sermant。\nx.x.x represents a certain version number of Sermant。")])]),e._v(" "),t("h3",{attrs:{id:"step-4-publish-traffic-tags"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step-4-publish-traffic-tags"}},[e._v("#")]),e._v(" Step 4: Publish traffic tags")]),e._v(" "),t("p",[e._v("Refer to "),t("RouterLink",{attrs:{to:"/en/document/user-guide/configuration-center.html"}},[e._v("Dynamic Configuration Center User Manual")])],1),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"content"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"alias: scene\\nmatches:\\n- apiPath:\\n    exact: /flow\\n  headers: {}\\n  method:\\n  - GET\\n  name: flow\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"group"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"service=spring-flow-provider"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"key"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"servicecomb.matchGroup.sceneFlow"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("Take Zookeeper as an example, use PrettyZoo tool to publish traffic marking strategy and flow control strategy:")]),e._v(" "),t("ol",[t("li",[e._v("create node "),t("code",[e._v("/service=spring-flow-provider")])])]),e._v(" "),t("MyImage",{attrs:{src:"/docs-img/flowcontrol-create-node-1.jpg"}}),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[e._v("create node "),t("code",[e._v("/service=spring-flow-provider/servicecomb.matchGroup.sceneFlow")]),e._v(" and data "),t("code",[e._v('"alias: scene\\nmatches:\\n- apiPath:\\n exact: /flow\\n headers: {}\\n method:\\n - GET\\n name: flow\\n"')])])]),e._v(" "),t("MyImage",{attrs:{src:"/docs-img/flowcontrol-create-node-2.jpg"}}),e._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[e._v("create node "),t("code",[e._v("/service=spring-flow-provider/servicecomb.rateLimiting.sceneFlow")]),e._v(" and data "),t("code",[e._v('"limitRefreshPeriod: \\"2S\\"\\nname: flow\\nrate: \\"4\\"\\n"')])])]),e._v(" "),t("MyImage",{attrs:{src:"/docs-img/flowcontrol-create-node-3.jpg"}}),e._v(" "),t("h3",{attrs:{id:"verify-result"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#verify-result"}},[e._v("#")]),e._v(" Verify Result")]),e._v(" "),t("p",[e._v("Request "),t("code",[e._v("localhost:8003/flow")]),e._v(" for multiple times. If "),t("code",[e._v("rate limited")]),e._v(" is returned when the number of requests exceeds 4 within 2 seconds, flow control is triggered successfully.")]),e._v(" "),t("MyImage",{attrs:{src:"/docs-img/flowcontrol-verity.jpg"}})],1)}),[],!1,null,null,null);t.default=s.exports}}]);