(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{509:function(t,a,s){"use strict";s.r(a);var e=s(26),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"插件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件结构"}},[t._v("#")]),t._v(" 插件结构")]),t._v(" "),a("p",[t._v("一个"),a("strong",[t._v("Sermant")]),t._v("的插件中可包含以下模块：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("插件主模块(plugin)")]),t._v("，该模块主要用于声明字节码增强逻辑及插件服务接口定义")]),t._v(" "),a("li",[a("code",[t._v("插件服务模块(service)")]),t._v("，该模块用于为插件包提供插件服务接口实现")])]),t._v(" "),a("p",[t._v("开始之前，需要明确约定，为避免类冲突问题，在"),a("code",[t._v("插件主模块(plugin)")]),t._v("中，开发者只能使用Java原生API和"),a("a",{attrs:{href:"#sermant-agentcore%E6%A8%A1%E5%9D%97"}},[t._v("sermant-agentcore模块")]),t._v("中的API，不能依赖或使用任何除"),a("code",[t._v("byte-buddy")]),t._v("以外的第三方依赖。如果应业务要求，需要使用其他第三方依赖的话，只能在"),a("code",[t._v("插件主模块(plugin)")]),t._v("中定义功能接口，并在"),a("code",[t._v("插件服务模块(service)")]),t._v("中编写接口实现，在开发中遵循上述约定，才可以更好的利用到"),a("strong",[t._v("Sermant")]),t._v("提供的类隔离能力。")]),t._v(" "),a("h4",{attrs:{id:"sermant-agentcore模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sermant-agentcore模块"}},[t._v("#")]),t._v(" sermant-agentcore模块")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"(https://github.com/huaweicloud/Sermant/tree/develop/sermant-agentcore/sermant-agentcore-core)"}},[t._v("sermant-agentcore模块")]),t._v("是Sermant Agent的核心模块，其中提供了字节码增强能力、类隔离能力、插件化能力、服务治理的基础服务等核心能力的封装。")])]),t._v(" "),a("h2",{attrs:{id:"插件主模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件主模块"}},[t._v("#")]),t._v(" 插件主模块")]),t._v(" "),a("p",[t._v("插件主模块是插件的主要实现，开发者需要在该模块中声明该插件的"),a("strong",[t._v("增强逻辑")]),t._v("。"),a("strong",[t._v("增强逻辑")]),t._v("开发可参考"),a("RouterLink",{attrs:{to:"/zh/document/developer-guide/bytecode-enhancement.html"}},[t._v("字节码增强")]),t._v("章节。为避免类冲突问题，插件主模块中不可引入第三方依赖。")],1),t._v(" "),a("h2",{attrs:{id:"插件服务模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件服务模块"}},[t._v("#")]),t._v(" 插件服务模块")]),t._v(" "),a("p",[a("strong",[t._v("插件服务模块")]),t._v("较"),a("strong",[t._v("插件主模块")]),t._v("相比：")]),t._v(" "),a("ul",[a("li",[t._v("用于编写"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1"}},[t._v("插件服务")]),t._v("，无法在其中声明插件所需的"),a("strong",[t._v("增强逻辑")]),t._v("。")]),t._v(" "),a("li",[t._v("允许自由添加需要的第三方依赖，打包构建的时候需要构建带依赖jar包。")]),t._v(" "),a("li",[t._v("需以"),a("code",[t._v("provided")]),t._v("形式在其pom中引入其对应的"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E4%B8%BB%E6%A8%A1%E5%9D%97"}},[t._v("插件主模块")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"插件服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件服务"}},[t._v("#")]),t._v(" 插件服务")]),t._v(" "),a("p",[a("strong",[t._v("插件服务")]),t._v("主要分为两部分：")]),t._v(" "),a("p",[a("strong",[t._v("服务接口定义")]),t._v("在"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E4%B8%BB%E6%A8%A1%E5%9D%97"}},[t._v("插件主模块")]),t._v("中用于描述该服务提供的能力，在定义插件的插件服务时，需要继承插件服务基础接口"),a("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/com/huaweicloud/sermant/core/plugin/service/PluginService.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("com.huaweicloud.sermant.core.PluginService"),a("OutboundLink")],1),t._v("，该接口提供"),a("code",[t._v("start()")]),t._v("方法会在"),a("strong",[t._v("Sermant")]),t._v("启动时被调用，"),a("code",[t._v("stop()")]),t._v("方法会在JVM停止时被调用。")]),t._v(" "),a("p",[a("strong",[t._v("服务接口实现")]),t._v("在"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97"}},[t._v("插件服务模块")]),t._v("中，在"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E4%B8%BB%E6%A8%A1%E5%9D%97"}},[t._v("插件主模块")]),t._v("中可以通过"),a("strong",[t._v("SPI")]),t._v("机制加载并使用插件服务的接口实现。")]),t._v(" "),a("h3",{attrs:{id:"开发示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发示例"}},[t._v("#")]),t._v(" 开发示例")]),t._v(" "),a("p",[t._v("本开发示例基于"),a("RouterLink",{attrs:{to:"/zh/document/developer-guide/"}},[t._v("创建首个插件")]),t._v("文档中创建的工程。")],1),t._v(" "),a("blockquote",[a("p",[t._v("注：该开发示例下描述的插件服务接口及其实现已在模板工程中存在，可直接使用，无需重复创建，本示例详细描述其创建过程可以使开发者更易于理解开发过程。")])]),t._v(" "),a("p",[t._v("在开发插件服务时，首先需要在"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E4%B8%BB%E6%A8%A1%E5%9D%97"}},[t._v("插件主模块")]),t._v("中定义插件服务的接口，这是使用插件服务时的索引，在工程中"),a("code",[t._v("template\\template-plugin")]),t._v("下创建"),a("code",[t._v("com.huaweicloud.sermant.template.EchoService")]),t._v("接口，并在其中定义"),a("code",[t._v("echo")]),t._v("接口方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EchoService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PluginService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("接口定义完成后，需要在"),a("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97"}},[t._v("插件服务模块")]),t._v("提供上述接口的实现，来执行实际的逻辑，在工程中"),a("code",[t._v("template\\template-service")]),t._v("中创建"),a("code",[t._v("com.huaweicloud.sermant.template.EchoServiceImpl")]),t._v("类，其需要实现"),a("code",[t._v("com.huaweicloud.sermant.template.EchoService")]),t._v("接口，并实现接口中定义的"),a("code",[t._v("echo")]),t._v("接口方法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EchoServiceImpl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EchoService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 回应别人的问候")]),t._v("\n        string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[\\\\pP+~$`^=|<>～｀＄＾＋＝｜＜＞￥×]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ECHO: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" to you!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("开发插件服务的最后，不要忘记添加插件服务的"),a("strong",[t._v("SPI")]),t._v("配置，在工程中"),a("code",[t._v("template\\template-service")]),t._v("下的资源目录"),a("code",[t._v("resources")]),t._v("中添加"),a("code",[t._v("META-INF/services")]),t._v("目录，并在其中创建名为"),a("code",[t._v("com.huaweicloud.sermant.core.plugin.service.PluginService")]),t._v("的"),a("strong",[t._v("SPI")]),t._v("文件，并向其中添加插件服务实现类的类名：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("huaweicloud"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sermant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("EchoServiceImpl")]),t._v("\n")])])]),a("p",[t._v("接下来，找到工程中"),a("code",[t._v("template\\template-plugin")]),t._v("下的"),a("code",[t._v("com.huaweicloud.sermant.template.TemplateDeclarer")]),t._v("类，在针对"),a("code",[t._v("main")]),t._v("方法的"),a("RouterLink",{attrs:{to:"/zh/document/developer-guide/bytecode-enhancement.html#拦截器"}},[t._v("拦截器")]),t._v("的"),a("code",[t._v("before")]),t._v("方法中使用已经开发完成的插件服务，通过"),a("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/blob/develop/sermant-agentcore/sermant-agentcore-core/src/main/java/com/huaweicloud/sermant/core/plugin/service/PluginServiceManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("com.huaweicloud.sermant.core.plugin.service.PluginServiceManager"),a("OutboundLink")],1),t._v("插件服务管理器获取插件服务并使用：")],1),t._v(" "),a("blockquote",[a("p",[t._v("注："),a("code",[t._v("com.huaweicloud.sermant.core.plugin.service.PluginServiceManager::getPluginService(Class clazz)")]),t._v("可通过插件服务接口基于Java SPI机制获取插件服务实现的实例。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecuteContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Good morning!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PluginServiceManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPluginService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EchoService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Good morning!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("开发完成后，可参照创建首个插件时的"),a("RouterLink",{attrs:{to:"/zh/document/developer-guide/#打包构建"}},[t._v("打包构建")]),t._v("流程，在工程根目录下执行 "),a("strong",[t._v("mvn package")]),t._v("，执行完成后在根目录执行 "),a("code",[t._v("cd agent/")]),t._v("，并在其中携带"),a("strong",[t._v("Sermant")]),t._v("运行测试应用，执行如下命令 "),a("strong",[t._v("java -javaagent:sermant-agent.jar -jar Application.jar")])],1),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("$ java "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("javaagent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("sermant"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("jar "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INFO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Loading")]),t._v(" core library"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INFO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Building")]),t._v(" argument map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INFO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Loading")]),t._v(" sermant agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INFO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Load")]),t._v(" sermant "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v(" \nGood")]),t._v(" morning"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ECHO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Good")]),t._v(" morning "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("you")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),a("p",[t._v("可以看到，招呼得到了回应，我们创建的插件服务已经生效了，如需要开发新的插件服务，按照上述开发示例执行即可。")])])}),[],!1,null,null,null);a.default=n.exports}}]);