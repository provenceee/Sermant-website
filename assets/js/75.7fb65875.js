(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{522:function(t,e,a){"use strict";a.r(e);var s=a(26),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"流控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流控"}},[t._v("#")]),t._v(" 流控")]),t._v(" "),e("p",[t._v("本文介绍如何使用"),e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/tree/develop/sermant-plugins/sermant-flowcontrol",target:"_blank",rel:"noopener noreferrer"}},[t._v("流控插件"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"功能介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能介绍"}},[t._v("#")]),t._v(" 功能介绍")]),t._v(" "),e("p",[t._v("流控插件基于"),e("a",{attrs:{href:"https://github.com/resilience4j",target:"_blank",rel:"noopener noreferrer"}},[t._v("resilience4j"),e("OutboundLink")],1),t._v(' 框架，以"流量"切入点，实现"无侵入式"流量控制；当前支持'),e("strong",[t._v("限流")]),t._v("、"),e("strong",[t._v("熔断")]),t._v("、"),e("strong",[t._v("隔离仓")]),t._v("、"),e("strong",[t._v("错误注入")]),t._v("与"),e("strong",[t._v("重试")]),t._v("、"),e("strong",[t._v("熔断指标采集")]),t._v("、"),e("strong",[t._v("系统规则")]),t._v("、"),e("strong",[t._v("系统自适应")]),t._v("流控能力，并且支持配置中心动态配置规则，实时生效。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("限流")]),t._v("：对指定接口限制1S秒内通过的QPS，当1S内流量超过指定阈值，将触发流控，限制请求流量，在客户端和服务端都可生效。")]),t._v(" "),e("li",[e("strong",[t._v("熔断")]),t._v("：对指定接口配置熔断策略，可从单位统计时间窗口内的错误率或者慢请求率进行统计，当请求错误率或者慢请求率达到指定比例阈值，即触发熔断，在时间窗口重置前，隔离所有请求，在客户端和服务端都可生效。")]),t._v(" "),e("li",[e("strong",[t._v("隔离仓")]),t._v("：对指定接口设置允许的最大并发量，当超过最大并发量时，对并发流量进行排队等待控制，等待超过最大等待时间则拒绝调用，避免瞬时并发流量过大导致服务崩溃，在客户端和服务端都可生效。")]),t._v(" "),e("li",[e("strong",[t._v("重试")]),t._v("：当服务遇到非致命的错误时，可以通过重试的方式避免服务的最终失败。")]),t._v(" "),e("li",[e("strong",[t._v("错误注入")]),t._v("：指在服务运行时，给指定服务配置错误注入策略，在客户端访问目标服务前，以指定策略模式返回。该策略多用于减少目标服务的访问负载，可作为降级的一种措施。")]),t._v(" "),e("li",[e("strong",[t._v("熔断指标采集")]),t._v("：当服务配置了熔断策略后，插件会异步采集熔断的相关信息，并通过"),e("RouterLink",{attrs:{to:"/zh/document/plugin/monitor.html"}},[t._v("监控插件")]),t._v("进行指标上报。")],1),t._v(" "),e("li",[e("strong",[t._v("系统规则")]),t._v("：在服务运行时，若系统负载，CPU使用率，并发线程数，请求平均响应时间，请求qps任意指标超出阈值，将触发流控，限制请求流量。")]),t._v(" "),e("li",[e("strong",[t._v("系统自适应")]),t._v("：在服务运行时，根据系统当前负载状态，以及过去一段时间内系统数据，对请求进行自适应流控。")])]),t._v(" "),e("h2",{attrs:{id:"参数配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数配置"}},[t._v("#")]),t._v(" 参数配置")]),t._v(" "),e("h3",{attrs:{id:"sermant-agent配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sermant-agent配置"}},[t._v("#")]),t._v(" Sermant-agent配置")]),t._v(" "),e("p",[t._v("流控插件依赖动态配置中心，需要在Sermant-agent中配置动态配置中心的地址（"),e("code",[t._v("dynamic.config.serverAddress")]),t._v("），动态配置中心的类型（"),e("code",[t._v("dynamic.config.dynamicConfigType")]),t._v("），具体参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/sermant-agent.html#sermant-agent使用参数配置"}},[t._v("Sermant-agent使用手册")]),t._v("。")],1),t._v(" "),e("h3",{attrs:{id:"插件配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插件配置"}},[t._v("#")]),t._v(" 插件配置")]),t._v(" "),e("p",[t._v("流控插件需打开是否开启ServiceComb适配（"),e("code",[t._v("flow.control.plugin.useCseRule")]),t._v("），是否开启指标监控（"),e("code",[t._v("flow.control.plugin.enable-start-monitor")]),t._v("）等开关，可在"),e("code",[t._v("${path}/sermant-agent-x.x.x/agent/pluginPackage/flowcontrol/config/config.yaml")]),t._v("找到插件的配置文件，配置如下所示：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("flow.control.plugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("useCseRule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否开启ServiceComb适配")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable-start-monitor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否启动指标监控")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable-system-adaptive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否开启系统自适应流控,开启此开关需enable-system-rule配置项也开启")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable-system-rule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否开启系统规则流控")]),t._v("\n")])])]),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("参数键")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("useCseRule")]),t._v(" "),e("td",[t._v("是否开启ServiceComb适配; "),e("br"),t._v(" "),e("strong",[t._v("true")]),t._v(":插件根据应用配置,服务配置,自定义标签订阅配置 "),e("br"),t._v(" "),e("strong",[t._v("false")]),t._v(":插件根据实例服务名进行配置订阅")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("是")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("enable-start-monitor")]),t._v(" "),e("td",[t._v("是否开启指标监控; "),e("strong",[t._v("true")]),t._v(":熔断指标数据通过监控插件上传至Prometheus，详情查看"),e("RouterLink",{attrs:{to:"/zh/document/plugin/monitor.html"}},[t._v("监控插件")])],1),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("enable-system-adaptive")]),t._v(" "),e("td",[t._v("是否开启系统自适应流控; "),e("br"),t._v(" "),e("strong",[t._v("true")]),t._v(":根据系统负载对请求流量进行自适应流控")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("enable-system-rule")]),t._v(" "),e("td",[t._v("是否开启系统规则流控; "),e("br"),t._v(" "),e("strong",[t._v("true")]),t._v(":根据流控策略中的系统参数阈值进行流控")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("否")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("useCseRule说明： Sermant当前支持zookeeper和ServiceComb-kie配置中心，默认采用zookeeper配置中心，若用户使用ServiceComb-kie，则需要设置"),e("strong",[t._v("useCseRule")]),t._v("配置为"),e("strong",[t._v("true")])])]),t._v(" "),e("h2",{attrs:{id:"详细治理规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#详细治理规则"}},[t._v("#")]),t._v(" 详细治理规则")]),t._v(" "),e("p",[t._v("流控配置主要基于"),e("code",[t._v("group")]),t._v("进行配置订阅，该"),e("code",[t._v("group")]),t._v("由多个键值对组成。下面详细说明"),e("code",[t._v("group")]),t._v("和键值对"),e("code",[t._v("key")]),t._v("和"),e("code",[t._v("value")]),t._v("的设置规则。")]),t._v(" "),e("blockquote",[e("p",[t._v("关于"),e("code",[t._v("group")]),t._v(" "),e("code",[t._v("key")]),t._v(" 的介绍以及配置中心的设置参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/configuration-center.html#发布配置"}},[t._v("动态配置中心使用手册")]),t._v("。")],1)]),t._v(" "),e("h4",{attrs:{id:"根据采用配置中心的不同-group的值将会有所区别-以下介绍group的设置规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#根据采用配置中心的不同-group的值将会有所区别-以下介绍group的设置规则"}},[t._v("#")]),t._v(" 根据采用配置中心的不同，"),e("code",[t._v("group")]),t._v("的值将会有所区别,以下介绍"),e("code",[t._v("group")]),t._v("的设置规则：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("采用"),e("code",[t._v("zookeeper")])]),t._v(" "),e("p",[t._v("此时插件将根据宿主应用的服务名进行订阅, 即应用配置的"),e("code",[t._v("spring.applicaton.name")]),t._v(", 插件订阅配置的group为"),e("code",[t._v("service=${spring.applicaton.name}")]),t._v("。")])]),t._v(" "),e("li",[e("p",[t._v("采用"),e("code",[t._v("KIE")])]),t._v(" "),e("p",[t._v("此时插件将根据"),e("strong",[t._v("应用配置")]),t._v("，"),e("strong",[t._v("服务配置")]),t._v("以及"),e("strong",[t._v("自定义配置")]),t._v("三项数据配置"),e("strong",[t._v("同时")]),t._v("订阅， 而这三类配置可参考"),e("code",[t._v("${path}/sermant-agent-x.x.x/agent/config/config.properties")]),t._v(", 相关配置如下：")]),t._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务app名称")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("service.meta.application")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("default")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务版本")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("service.meta.version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("1.0.0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# serviceComb 命名空间")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("service.meta.project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("default")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("service.meta.environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("development")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义标签，按需配置，用于后续的配置订阅")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("service.meta.customLabel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("public")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("service.meta.customLabelValue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("default")]),t._v("\n")])])]),e("p",[t._v("应用配置，服务配置，自定义配置说明参考"),e("a",{attrs:{href:"https://support.huaweicloud.com/devg-cse/cse_devg_0020.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSE配置中心概述"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("ul",[e("li",[t._v("应用配置：由"),e("code",[t._v("service.meta.application")]),t._v("与"),e("code",[t._v("service.meta.environment")]),t._v("组成， 对应的"),e("code",[t._v("group")]),t._v("为"),e("code",[t._v("app=default&environment=development")]),t._v("。")]),t._v(" "),e("li",[t._v("服务配置：由"),e("code",[t._v("service.meta.application")]),t._v("、"),e("code",[t._v("service.meta.environment")]),t._v("以及服务名组成，此处服务即"),e("code",[t._v("spring.application.name")]),t._v(", 对应的"),e("code",[t._v("group")]),t._v("为"),e("code",[t._v("app=default&environment=development&service=DynamicConfigDemo")]),t._v("。")]),t._v(" "),e("li",[t._v("自定义配置：由"),e("code",[t._v("service.meta.customLabel")]),t._v("与"),e("code",[t._v("service.meta.customLabelValue")]),t._v("组成， 对应的"),e("code",[t._v("group")]),t._v("为"),e("code",[t._v("public=default")]),t._v("。")])])])]),t._v(" "),e("h4",{attrs:{id:"流控插件根据配置键key的前缀进行规则匹配-以下介绍配置键key的规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#流控插件根据配置键key的前缀进行规则匹配-以下介绍配置键key的规则"}},[t._v("#")]),t._v(" 流控插件根据配置键"),e("code",[t._v("key")]),t._v("的前缀进行规则匹配，以下介绍配置键"),e("code",[t._v("key")]),t._v("的规则：")]),t._v(" "),e("p",[t._v("流量治理采用流量标记+流控规则的方式对指定的流量进行流控，所谓流量标记，通俗讲为请求信息，例如接口路径、接口方法类型、请求头以及下游服务名。")]),t._v(" "),e("p",[t._v("流控规则是否生效取决于流量标记，当流量标记与请求相匹配，流控规则才会生效。而如何将流量标记对应上具体规则，则取决于业务场景名，通常流量标记与流控规则配置均要配置指定前缀。")]),t._v(" "),e("p",[t._v("例如流量标记的键key需以"),e("code",[t._v("servicecomb.MatchGroup")]),t._v("为前缀, 而限流规则的键key需以"),e("code",[t._v("servicecomb.rateLimiting")]),t._v("为前缀，以一个具体的例子：")]),t._v(" "),e("blockquote",[e("p",[t._v("流量标记配置键key为："),e("code",[t._v("servicecomb.MatchGroup.flow")]),t._v("。")]),t._v(" "),e("p",[t._v("限流规则配置键key为："),e("code",[t._v("servicecomb.rateLimiting.flow")]),t._v("。")]),t._v(" "),e("p",[t._v("如上，"),e("code",[t._v("flow")]),t._v("即为业务场景名，仅当两者业务场景名称一致，当请求匹配上流量标记时，限流规则才会生效。")])]),t._v(" "),e("h4",{attrs:{id:"下面介绍流控规则配置键key对应值value的相关信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下面介绍流控规则配置键key对应值value的相关信息"}},[t._v("#")]),t._v(" 下面介绍流控规则配置键"),e("code",[t._v("key")]),t._v("对应值"),e("code",[t._v("value")]),t._v("的相关信息：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("流量标记")])]),t._v(" "),e("p",[e("strong",[t._v("流量标记配置键前缀:")]),t._v(" "),e("code",[t._v("servicecomb.MatchGroup")])]),t._v(" "),e("p",[t._v("以"),e("code",[t._v("zookeeper")]),t._v("为例，当使用"),e("code",[t._v("zookeeper")]),t._v("配置中心设置流量标记规则时，结合上述"),e("code",[t._v("group")]),t._v("和"),e("code",[t._v("key")]),t._v("的说明，需要在"),e("code",[t._v("zookeeper")]),t._v("中创建节点"),e("code",[t._v("/service=${spring.applicaton.name}/servicecomb.MatchGroup.${sceneName}")]),t._v(",节点内容为流量标记规则，如下述yaml内容。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配器集合，可配置多个")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配的api路径， 支持各种比较方式，相等(exact)、包含(contains)等")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /degrade "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 具体匹配路径")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("headers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求头")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求头值，此处为key=value, 比较方式同apiPath")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 支持方法类型")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" GET\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" degrade     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可选，配置名")]),t._v("\n")])])]),e("p",[e("strong",[t._v("流量标记解释:")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("请求路径为"),e("code",[t._v("/degrade")]),t._v("且方法类型为"),e("code",[t._v("GET")]),t._v(", 同时满足要求请求头包含"),e("code",[t._v("key=value")]),t._v("即匹配成功")]),t._v(" "),e("p",[t._v("详细配置项可参考"),e("a",{attrs:{href:"http://servicecomb.gitee.io/servicecomb-java-chassis-doc/java-chassis/zh_CN/references-handlers/governance.html#_2",target:"_blank",rel:"noopener noreferrer"}},[t._v("ServiceComb开发文档"),e("OutboundLink")],1),t._v(" 流量标记部分。")])])]),t._v(" "),e("p",[e("strong",[t._v("流量标记请求路径（apiPath）配置说明")])]),t._v(" "),e("p",[t._v("流量标记的请求路径会因不同的请求协议配置而存在差异，当前主要为Http（Spring）与Rpc（Dubbo）协议，下面分别说明两种请求协议的配置方式：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Http协议")]),t._v(" "),e("p",[t._v("该协议依据请求路径进行匹配，例如请求路径为localhost:8080/test/flow, 则实际拿到的路径为"),e("code",[t._v("/test/flow")]),t._v("，因此若需设置匹配规则，需依据该路径进行配置。")]),t._v(" "),e("p",[t._v("值得注意的是，如果用户配置了contextPath, 则需要加上contextPath前缀才可生效，即流量标记中请求路径为"),e("code",[t._v("${contextPath}/test/flow")]),t._v("。")])]),t._v(" "),e("li",[e("p",[t._v("Rpc协议（Dubbo）")]),t._v(" "),e("p",[t._v("该协议调用需要基于接口+方法，例如请求的接口为com.demo.test, 其方法为flow， 则对应的请求路径为"),e("code",[t._v("com.demo.test.flow")]),t._v(", 特别的，如果用户有配置接口的版本，例如指定的version为1.0.0， 则请求路径为"),e("code",[t._v("com.demo.test:1.0.0.flow")]),t._v("。同时需要配置请求方法为"),e("code",[t._v("POST")]),t._v(", RPC协议仅支持POST类型。")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("限流")])]),t._v(" "),e("p",[e("strong",[t._v("限流规则配置键前缀：")]),t._v(" "),e("code",[t._v("servicecomb.rateLimiting")])]),t._v(" "),e("p",[e("strong",[t._v("限流规则：")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("配置项")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("limitRefreshPeriod")]),t._v(" "),e("td",[t._v("单位统计时间，单位毫秒, 若需配置秒则可增加单位"),e("code",[t._v("S")]),t._v("， 例如"),e("code",[t._v("10S")])]),t._v(" "),e("td",[t._v("1000ms")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("rate")]),t._v(" "),e("td",[t._v("单位统计时间所能通过的"),e("strong",[t._v("请求个数")])]),t._v(" "),e("td",[t._v("1000")]),t._v(" "),e("td",[t._v("否")])])])]),t._v(" "),e("p",[t._v("以zookeeper为例，当使用"),e("code",[t._v("zookeeper")]),t._v("配置中心设置限流规则时，结合上述"),e("code",[t._v("group")]),t._v("和"),e("code",[t._v("key")]),t._v("的说明，需要在"),e("code",[t._v("zookeeper")]),t._v("中创建节点"),e("code",[t._v("/service=${spring.applicaton.name}/servicecomb.rateLimiting.${sceneName}")]),t._v(",节点内容为限流规则，如下述yaml内容：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imitRefreshPeriod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述限流规则解释：")]),t._v(" 若1秒内超过2个请求，即触发流控效果。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("熔断")])]),t._v(" "),e("p",[e("strong",[t._v("熔断规则配置键前缀:")]),t._v(" "),e("code",[t._v("servicecomb.circuitBreaker")])]),t._v(" "),e("p",[e("strong",[t._v("熔断规则：")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("配置项")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("failureRateThreshold")]),t._v(" "),e("td",[t._v("熔断所需达到的错误率")]),t._v(" "),e("td",[t._v("50")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("minimumNumberOfCalls")]),t._v(" "),e("td",[t._v("滑动窗口内的最小请求数， 超过最小请求数才开始判断熔断条件")]),t._v(" "),e("td",[t._v("100")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("name")]),t._v(" "),e("td",[t._v("配置项名称，可选参数")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("slidingWindowSize")]),t._v(" "),e("td",[t._v("滑动统计窗口大小，支持毫秒与秒，例如"),e("code",[t._v("1000")]),t._v("为1000毫秒, "),e("code",[t._v("10S")]),t._v("代表10秒")]),t._v(" "),e("td",[t._v("100ms")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("slidingWindowType")]),t._v(" "),e("td",[t._v("滑动窗口类型，目前支持"),e("code",[t._v("time")]),t._v("与"),e("code",[t._v("count")]),t._v("两种类型，前者基于时间窗口统计，后者基于请求次数")]),t._v(" "),e("td",[t._v("time")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("slowCallDurationThreshold")]),t._v(" "),e("td",[t._v("慢请求阈值，单位同滑动窗口配置")]),t._v(" "),e("td",[t._v("60s")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("slowCallRateThreshold")]),t._v(" "),e("td",[t._v("慢请求占比，当慢调用请求数达到该比例触发通断")]),t._v(" "),e("td",[t._v("100")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("waitDurationInOpenState")]),t._v(" "),e("td",[t._v("熔断后恢复时间")]),t._v(" "),e("td",[t._v("60s")]),t._v(" "),e("td",[t._v("否")])])])]),t._v(" "),e("p",[t._v("以zookeeper为例，当使用"),e("code",[t._v("zookeeper")]),t._v("配置中心设置熔断规则时，结合上述"),e("code",[t._v("group")]),t._v("和"),e("code",[t._v("key")]),t._v("的说明，需要在"),e("code",[t._v("zookeeper")]),t._v("中创建节点"),e("code",[t._v("/service=${spring.applicaton.name}/servicecomb.circuitBreaker.${sceneName}")]),t._v(",节点内容为熔断规则，如下述yaml内容：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureRateThreshold")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minimumNumberOfCalls")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" degrade\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slidingWindowSize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10S\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slidingWindowType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" time\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slowCallDurationThreshold")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("slowCallRateThreshold")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("waitDurationInOpenState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10s\n")])])]),e("p",[e("strong",[t._v("上述熔断规则解释：")]),t._v(" 10秒内，若流量标记的接口请求次数超过3次，且错误率超过90%或者慢请求占比超过80%则触发熔断。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("隔离")])]),t._v(" "),e("p",[e("strong",[t._v("隔离规则配置键前缀:")]),t._v(" "),e("code",[t._v("servicecomb.bulkhead")])]),t._v(" "),e("p",[e("strong",[t._v("隔离规则：")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("配置项")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("maxConcurrentCalls")]),t._v(" "),e("td",[t._v("最大并发数")]),t._v(" "),e("td",[t._v("1000")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("maxWaitDuration")]),t._v(" "),e("td",[t._v("最大等待时间，若线程超过"),e("code",[t._v("maxConcurrentCalls")]),t._v("，会尝试等待，若超出等待时间还未获取资源，则抛出隔离仓异常")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("name")]),t._v(" "),e("td",[t._v("可选，配置名称")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("否")])])])]),t._v(" "),e("p",[t._v("以zookeeper为例，当使用"),e("code",[t._v("zookeeper")]),t._v("配置中心设置隔离规则时，结合上述"),e("code",[t._v("group")]),t._v("和"),e("code",[t._v("key")]),t._v("的说明，需要在"),e("code",[t._v("zookeeper")]),t._v("中创建节点"),e("code",[t._v("/service=${spring.applicaton.name}/servicecomb.circuitBreaker.${sceneName}")]),t._v(",节点内容为隔离规则，如下述yaml内容：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxConcurrentCalls")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxWaitDuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10S"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"隔离仓"')]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述隔离规则解释：")]),t._v(" 针对流量标记的接口, 若最大并发数超过5，且新的请求等待10S，还未获取资源，则触发隔离仓异常。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("重试")])]),t._v(" "),e("p",[e("strong",[t._v("重试规则配置键前缀:")]),t._v(" "),e("code",[t._v("servicecomb.retry")])]),t._v(" "),e("p",[e("strong",[t._v("重试规则：")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("配置项")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("waitDuration")]),t._v(" "),e("td",[t._v("重试等待时间，默认毫秒；支持秒单位，例如2S")]),t._v(" "),e("td",[t._v("10ms")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("retryStrategy")]),t._v(" "),e("td",[t._v("重试策略，当前支持两种重试策略：固定时间间隔（FixedInterval）， 指数增长间隔(RandomBackoff)")]),t._v(" "),e("td",[t._v("FixedInterval")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("maxAttempts")]),t._v(" "),e("td",[t._v("最大重试次数")]),t._v(" "),e("td",[t._v("3")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("retryOnResponseStatus")]),t._v(" "),e("td",[t._v("HTTP状态码，当前仅支持HTTP请求；针对dubbo请求，可通过配置异常类型确定是否需要重试，默认为RpcException")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("否")])])])]),t._v(" "),e("p",[t._v("以zookeeper为例，当使用"),e("code",[t._v("zookeeper")]),t._v("配置中心设置重试规则时，结合上述"),e("code",[t._v("group")]),t._v("和"),e("code",[t._v("key")]),t._v("的说明，需要在"),e("code",[t._v("zookeeper")]),t._v("中创建节点"),e("code",[t._v("/service=${spring.applicaton.name}/servicecomb.retry.${sceneName}")]),t._v(",节点内容为重试规则，如下述yaml内容：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("waitDuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2000"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retryStrategy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" FixedInterval\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxAttempts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retryOnResponseStatus")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述重试规则解释：")]),t._v(" 针对流量标记的接口, 当请求抛出500异常时进行重试，直到重试成功或者达到最大重试次数。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("错误注入")])]),t._v(" "),e("p",[e("strong",[t._v("错误注入规则配置键前缀:")]),t._v(" "),e("code",[t._v("servicecomb.faultInjection")])]),t._v(" "),e("p",[e("strong",[t._v("错误注入规则：")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("配置项")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("type")]),t._v(" "),e("td",[t._v("错误注入类型, 目前支持abort(请求直接返回)与delay（请求延时）")]),t._v(" "),e("td",[t._v("delay")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("percentage")]),t._v(" "),e("td",[t._v("错误注入触发概率")]),t._v(" "),e("td",[t._v("-1")]),t._v(" "),e("td",[t._v("是")])]),t._v(" "),e("tr",[e("td",[t._v("fallbackType")]),t._v(" "),e("td",[t._v("请求调用返回类型，仅"),e("code",[t._v("type=abort")]),t._v("生效。当前支持两种"),e("code",[t._v("ReturnNull")]),t._v(":直接返回空内容，状态码200；"),e("code",[t._v("ThrowException")]),t._v(": 按照指定错误码返回，关联配置"),e("code",[t._v("errorCode")])]),t._v(" "),e("td",[t._v("ThrowException")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("errorCode")]),t._v(" "),e("td",[t._v("指定错误码返回, 默认500, 仅在"),e("code",[t._v("type=abort")]),t._v("且"),e("code",[t._v("fallbackType=ThrowException")]),t._v("生效")]),t._v(" "),e("td",[t._v("500")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("forceClosed")]),t._v(" "),e("td",[t._v("是否强制关闭错误注入能力, 当为true时，错误注入将不会生效。默认false")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("否")])])])]),t._v(" "),e("p",[t._v("以zookeeper为例，当使用"),e("code",[t._v("zookeeper")]),t._v("配置中心设置错误注入规则时，结合上述"),e("code",[t._v("group")]),t._v("和"),e("code",[t._v("key")]),t._v("的说明，需要在"),e("code",[t._v("zookeeper")]),t._v("中创建节点"),e("code",[t._v("/service=${spring.applicaton.name}/servicecomb.retry.${sceneName}")]),t._v(",节点内容为错误注入规则，如下述yaml内容：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" abort\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("percentage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fallbackType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReturnNull\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("forceClosed")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("errorCode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述错误注入规则解释：")]),t._v(" 当请求流量标记的接口时，100%将返回空。")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("系统规则")])]),t._v(" "),e("p",[e("strong",[t._v("系统规则配置键前缀:")]),t._v(" "),e("code",[t._v("servicecomb.system")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("配置项")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("是否必须")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("systemLoad")]),t._v(" "),e("td",[t._v("系统负载阈值，仅支持linux")]),t._v(" "),e("td",[t._v("Double.MAX_VALUE")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("cpuUsage")]),t._v(" "),e("td",[t._v("系统cpu使用率阈值")]),t._v(" "),e("td",[t._v("1.0")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("qps")]),t._v(" "),e("td",[t._v("入口流量的qps阈值")]),t._v(" "),e("td",[t._v("Double.MAX_VALUE")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("aveRt")]),t._v(" "),e("td",[t._v("入口流量的平均响应时间阈值，单位ms")]),t._v(" "),e("td",[t._v("Long.MAX_VALUE")]),t._v(" "),e("td",[t._v("否")])]),t._v(" "),e("tr",[e("td",[t._v("threadNum")]),t._v(" "),e("td",[t._v("入口流量的并发线程数阈值")]),t._v(" "),e("td",[t._v("Long.MAX_VALUE")]),t._v(" "),e("td",[t._v("否")])])])]),t._v(" "),e("p",[t._v("以zookeeper为例，当使用"),e("code",[t._v("zookeeper")]),t._v("配置中心设置系统规则时，结合上述"),e("code",[t._v("group")]),t._v("和"),e("code",[t._v("key")]),t._v("的说明，需要在"),e("code",[t._v("zookeeper")]),t._v("中创建节点"),e("code",[t._v("/service=${spring.applicaton.name}/servicecomb.system.${sceneName}")]),t._v(",节点内容为系统规则，如下述yaml内容：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("systemLoad")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpuUsage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("qps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("aveRt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("threadNum")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n")])])]),e("p",[e("strong",[t._v("上述系统规则解释：")])]),t._v(" "),e("ul",[e("li",[t._v("针对使用流控插件的应用示例来说，当系统负载超过5，或者cpu使用率超过0.6，或者qps超过1000，或者请求响应时间小鱼100ms，或者并发线程数大于200时，即触发限流，返回对应异常信息。")]),t._v(" "),e("li",[t._v("若开启系统自适应开关，则当系统负载大于5时，若当前并发线程数大于系统容量（系统容量由qps * minRt计算得出），则触发限流。")])])])]),t._v(" "),e("h3",{attrs:{id:"基于配置文件设置规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于配置文件设置规则"}},[t._v("#")]),t._v(" 基于配置文件设置规则")]),t._v(" "),e("p",[t._v("若应用未采用配置中心的方式配置流控规则，也可采用配置文件的方式使用流控能力。")]),t._v(" "),e("p",[t._v("流控插件在应用启动时，会尝试的从SpringBoot加载的配置源读取流控规则以及对应的流量标记，用户需要在启动之前进行配置。如下为配置示例, 示例配置直接基于"),e("code",[t._v("application.yml")]),t._v("进行配置")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicecomb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 流量标记前缀")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchGroup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 流量标记前缀")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-fault-null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误注入场景")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配器集合")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配的api路径")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/flow"')]),t._v("              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 具体匹配路径")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-retry")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重试场景")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                          \n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                      \n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/retry"')]),t._v("            \n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("provider    \n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 支持方法类型")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" GET                         \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-rateLimiting")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限流场景")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/flow"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-circuitBreaker-exception")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 熔断场景")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/exceptionBreaker"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-bulkhead")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 隔离舱场景")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/flowcontrol/bulkhead"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-system")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 系统规则场景")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matched")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prefix")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rateLimiting")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限流规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-rateLimiting")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retry")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重试规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-retry")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      maxAttempts: 3\n      retryOnResponseStatus:\n      - 500")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("circuitBreaker")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 熔断规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-circuitBreaker-exception")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      failureRateThreshold: 44\n      minimumNumberOfCalls: 2\n      name: 熔断\n      slidingWindowSize: 10000\n      slidingWindowType: time\n      waitDurationInOpenState: 5s")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bulkhead")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 隔离规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-bulkhead")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      maxConcurrentCalls: 1\n      maxWaitDuration: 10")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("faultInjection")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误注入规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-fault-null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      type: abort\n      percentage: 100\n      fallbackType: ReturnNull\n      forceClosed: false")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("system")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                               "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 系统流控规则")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo-system")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      systemLoad: 0.6\n      cpuUsage: 0.6\n      qps: 100\n      aveRt: 20\n      threadNum: 100")]),t._v("\n")])])]),e("h3",{attrs:{id:"基于sermant动态配置中心发布规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于sermant动态配置中心发布规则"}},[t._v("#")]),t._v(" 基于Sermant动态配置中心发布规则")]),t._v(" "),e("p",[t._v("基于Sermant动态配置中心发布规则，可以参考"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/configuration-center.html"}},[t._v("动态配置中心使用手册")]),t._v("。")],1),t._v(" "),e("h2",{attrs:{id:"支持版本与限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持版本与限制"}},[t._v("#")]),t._v(" 支持版本与限制")]),t._v(" "),e("h3",{attrs:{id:"支持版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#支持版本"}},[t._v("#")]),t._v(" 支持版本")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("框架类型")]),t._v(" "),e("th",[t._v("版本支持")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("SpringBoot")]),t._v(" "),e("td",[t._v("1.2.x - 2.6.x")])]),t._v(" "),e("tr",[e("td",[t._v("SpringWebMvc")]),t._v(" "),e("td",[t._v("4.1.3.RELEASE - 5.3.x")])]),t._v(" "),e("tr",[e("td",[t._v("Dubbo")]),t._v(" "),e("td",[t._v("2.6.x-2.7.x")])])])]),t._v(" "),e("h3",{attrs:{id:"限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#限制"}},[t._v("#")]),t._v(" 限制")]),t._v(" "),e("ul",[e("li",[t._v("系统规则与系统自适应规则中"),e("code",[t._v("systemLoad")]),t._v("配置仅限于"),e("strong",[t._v("Linux")]),t._v("。")]),t._v(" "),e("li",[t._v("上述"),e("a",{attrs:{href:"#%E5%9F%BA%E4%BA%8E%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AE%BE%E7%BD%AE%E9%85%8D%E7%BD%AE"}},[t._v("基于配置文件设置配置")]),t._v(" 仅限于"),e("strong",[t._v("Springboot")]),t._v("应用。")])]),t._v(" "),e("h2",{attrs:{id:"操作和结果验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作和结果验证"}},[t._v("#")]),t._v(" 操作和结果验证")]),t._v(" "),e("p",[t._v("下面将演示如何使用流控插件，验证springboot应用采用zookeeper配置中心，设置限流策略场景。")]),t._v(" "),e("h3",{attrs:{id:"准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant-examples/tree/main/flowcontrol-demo/spring-cloud-demo/spring-provider",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v(" demo源码")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/huaweicloud/Sermant/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v(" 或编译Sermant包")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zookeeper.apache.org/releases#download",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),e("OutboundLink")],1),t._v(" 并启动zookeeper")])]),t._v(" "),e("h3",{attrs:{id:"步骤一-编译打包demo应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤一-编译打包demo应用"}},[t._v("#")]),t._v(" 步骤一：编译打包demo应用")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("${path}/Sermant-examples/flowcontrol-demo/spring-cloud-demo/spring-provider")]),t._v("目录执行以下命令：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows,Linux,mac")]),t._v("\nmvn clean package\n")])])]),e("p",[t._v("打包成功后，在"),e("code",[t._v("${path}/Sermant-examples/flowcontrol-demo/spring-cloud-demo/spring-provider/target")]),t._v("得到"),e("code",[t._v("spring-provider.jar")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("说明")]),t._v("： ${path}为demo应用下载所在路径。")])]),t._v(" "),e("h3",{attrs:{id:"步骤二-修改插件配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤二-修改插件配置"}},[t._v("#")]),t._v(" 步骤二：修改插件配置")]),t._v(" "),e("p",[t._v("参考"),e("a",{attrs:{href:"#%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE"}},[t._v("插件配置")]),t._v(" 修改"),e("code",[t._v("${path}/sermant-agent-x.x.x/agent/pluginPackage/flowcontrol/config/config.yaml")]),t._v("文件为以下内容：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("flow.control.plugin:\n  useCseRule: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否开启ServiceComb适配")]),t._v("\n  enable-start-monitor: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否启动指标监控")]),t._v("\n  enable-system-adaptive: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否开启系统自适应流控")]),t._v("\n  enable-system-rule: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否开启系统规则流控")]),t._v("\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("说明")]),t._v("： ${path}为sermant所在路径。")])]),t._v(" "),e("h3",{attrs:{id:"步骤三-启动demo应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤三-启动demo应用"}},[t._v("#")]),t._v(" 步骤三：启动demo应用")]),t._v(" "),e("p",[t._v("参考如下命令启动demo应用")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windwos")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent-x.x.x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("agent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("sermant-agent.jar "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dspring.application.name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dspring.cloud.zookeeper.connectString")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-provider.jar\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#linux mac")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" -javaagent:"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${path}")]),t._v("/sermant-agent-x.x.x/agent/sermant-agent.jar "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dspring.application.name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dspring.cloud.zookeeper.connectString")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:2181 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-jar")]),t._v(" spring-provider.jar\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("说明：")]),t._v(" ${path}为sermant实际安装路径，x.x.x代表sermant某个版本号。")])]),t._v(" "),e("h3",{attrs:{id:"步骤四-发布流量标记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤四-发布流量标记"}},[t._v("#")]),t._v(" 步骤四：发布流量标记")]),t._v(" "),e("p",[t._v("参考使用"),e("RouterLink",{attrs:{to:"/zh/document/user-guide/configuration-center.html"}},[t._v("动态配置中心使用手册")]),t._v("，发布如下配置：")],1),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alias: scene\\nmatches:\\n- apiPath:\\n    exact: /flow\\n  headers: {}\\n  method:\\n  - GET\\n  name: flow\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"group"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"service=spring-flow-provider"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"servicecomb.matchGroup.sceneFlow"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("利用zookeeper提供的命令行工具来发布流量标记策略和流控策略：")]),t._v(" "),e("ol",[e("li",[t._v("在"),e("code",[t._v("${path}/bin/")]),t._v("目录执行以下命令创建节点"),e("code",[t._v("/service=spring-flow-provider")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux mac")]),t._v("\n./zkCli.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windows")]),t._v("\nzkCli.cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("在"),e("code",[t._v("${path}/bin/")]),t._v("目录执行以下命令创建节点"),e("code",[t._v("/service=spring-flow-provider/servicecomb.matchGroup.sceneFlow")]),t._v("和数据"),e("code",[t._v('"alias: scene\\nmatches:\\n- apiPath:\\n exact: /flow\\n headers: {}\\n method:\\n - GET\\n name: flow\\n"')])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux mac")]),t._v("\n./zkCli.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider/servicecomb.matchGroup.sceneFlow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alias: scene\nmatches:\n- apiPath:\n    exact: /flow\n  headers: {}\n  method:\n  - GET\n  name: flow"')]),t._v("\n  \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# windwos")]),t._v("\nzkCli.cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider/servicecomb.matchGroup.sceneFlow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alias: scene\nmatches:\n- apiPath:\n    exact: /flow\n  headers: {}\n  method:\n  - GET\n  name: flow"')]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("在"),e("code",[t._v("${path}/bin/")]),t._v("目录执行以下命令创建节点"),e("code",[t._v("/service=spring-flow-provider/servicecomb.rateLimiting.sceneFlow")]),t._v("和数据"),e("code",[t._v('"limitRefreshPeriod: \\"2S\\"\\nname: flow\\nrate: \\"4\\"\\n"')])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# linux mac")]),t._v("\n./zkCli.sh "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider/servicecomb.rateLimiting.sceneFlow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"limitRefreshPeriod: 2S\nname: flow\nrate: 4"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#windows")]),t._v("\nzkCli.cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-server")]),t._v(" localhost:2181 create /service"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("spring-flow-provider/servicecomb.rateLimiting.sceneFlow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"limitRefreshPeriod: 2S\nname: flow\nrate: 4"')]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("说明：${path}为zookeeper的安装目录。")])]),t._v(" "),e("h3",{attrs:{id:"验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[t._v("#")]),t._v(" 验证")]),t._v(" "),e("p",[t._v("通过curl工具多次请求"),e("code",[t._v("localhost:8003/flow")]),t._v(", 若在2秒内请求数超过4个时返回"),e("code",[t._v("rate limited")]),t._v("，则触发流控成功，效果如下：")]),t._v(" "),e("MyImage",{attrs:{src:"/docs-img/flowcontrol-verity.jpg"}})],1)}),[],!1,null,null,null);e.default=r.exports}}]);